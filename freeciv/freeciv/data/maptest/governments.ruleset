
; Modifying this file:
; You should not modify this file except to make bugfixes or
; for other "maintenance".  If you want to make custom changes
; you should create a new datadir subdirectory and copy this file
; into that directory, and then modify that copy.  Then use the
; command "rulesetdir <mysubdir>" in the server to have freeciv
; use your new customized file.

; Note that the freeciv AI may not cope well with anything more
; than minor changes.

[datafile]
description="Avant-garde governments data for Freeciv"
options="+Freeciv-ruleset-Devel-2017.Jan.02 web-compatible"
format_version=20

[governments]
during_revolution="Anarchy"

; /* <-- avoid gettext warnings
;
; Below: The individual government types, one per section.
;
; The actual tag used (the * in [government_*]) does not matter, except
; it must be unique within this file, and it may be used in debug
; output when reading this file.
;
; For the "official" rulesets, the order of these sections should not
; be changed because that would break backward compatability with
; savegames.  (In particular, if Fundamentalism is added to default
; ruleset, should be added at end.)
;
; Notes on fields:
;
; name         = translatable name as seen by user
; rule_name    = (optional) internal name for savegames, rulesets etc; if
;                not present, "name" is used for this purpose too. Since
;                the name used in savegames must not change, if you want
;                to rename an item after a ruleset has been released, you
;                should set "rule_name" to the original value of "name".
; reqs         = requirements for this government (see README.effects)
; graphic      = tag specifing preferred graphic
; graphic_alt  = alternate graphics tag if preferred is not found;
;                should be a standard tag if preferred is not;
;                otherwise may be "-"
; ai_better    = AI will not consider this government for use if the
;                government listed here is available
; ruler_titles = ruler titles by nation, "-" is default, and non-matched
;                nations are ignored
; helptext     = optional help text string; should escape all raw newlines
;                so that xgettext parsing works
;
; */ <-- avoid gettext warnings

;------------------------------------------------------------------------
[government_anarchy]

name        = _("Anarchy")
; No reqs
graphic     = "gov.anarchy"
graphic_alt = "-"

ruler_male_title = _("Warlord %s")
ruler_female_title = _("Warlady %s")

helptext = _("\
Anarchy is simply the absence of any recognizable government.\
 Citizens are disorganized and unproductive, and will spend all\
 income as quickly as possible, rather than paying taxes or\
 conducting research.\
"), _("\
Anarchy offers slightly less corruption than Despotism,\
 but slightly more unhappiness.\
")

;------------------------------------------------------------------------
[government_despotism]

name        = _("Despotism")
; No reqs
graphic     = "gov.despotism"
graphic_alt = "-"
ai_better   = "Monarchy"

ruler_male_title = _("Chief %s")
ruler_female_title = _("?female:Chief %s")

helptext = _("\
Under Despotism, you are the absolute ruler of your people.  Your\
 control over your citizens is maintained largely by martial law.\
"), _("\
Despotism suffers the highest level of corruption of all\
 forms of government.\
")

;------------------------------------------------------------------------
[government_monarchy]

name        = _("Monarchy")
reqs = { "type", "name", "range"
         "tech", "Monarchy", "Player"
       }
graphic     = "gov.monarchy"
graphic_alt = "-"
ai_better   = "Communism"

ruler_male_title = _("King %s")
ruler_female_title = _("Queen %s")

helptext = _("\
Under Monarchy, a king or queen serves as a hereditary figurehead\
 for your government.\
"), _("\
Monarchy suffers the same small amount of corruption that\
 the Republic does.\
")

;------------------------------------------------------------------------
[government_communism]

name        = _("Communism")
reqs = { "type", "name", "range"
         "tech", "Communism", "Player"
       }
graphic     = "gov.communism"
graphic_alt = "-"

ruler_male_title = _("Comrade %s")
ruler_female_title = _("?female:Comrade %s")

helptext = _("\
In Communism, all work, output, and goods are owned by the state.\
"), _("\
Corruption does not vary by distance from the capital;\
 all cities have the same base level of corruption. Each city gets 4\
 units free of upkeep. Buildings with 1 upkeep are free.\
 The capital city with Palace gets a +25% production bonus.\
"), _("\
Communist governments get a cost discount of -5 on Riflemen and -10\
 on Dive Bombers.\
"), _("\
Communist states can transfer Proletarians between cities to\
 re-distribute population. Large numbers of Proletarians can be\
 used to finish State projects. The Communism tech allows a\
 Communist government to conscript Workers to Riflemen and vice
 versa, if inside national territory and if possessing the necessary\
 technologies.\
")

;------------------------------------------------------------------------
[government_republic]

name        = _("Republic")
reqs = { "type", "name", "range"
         "tech", "The Republic", "Player"
       }
graphic     = "gov.republic"
graphic_alt = "-"

ruler_male_title = _("President %s")
ruler_female_title = _("?female:President %s")

helptext = _("\
Under a Republican government, citizens hold an election to select a\
 representative who will govern them; since elected leaders must\
 remain popular to remain in control, citizens are given a greater\
 degree of freedom.  Citizens under the Republic become unhappy\
 easily, but the self-sufficiency of your citizens allows high levels\
 of trade.\
")

;------------------------------------------------------------------------
[government_democracy]

name        = _("Democracy")
reqs = { "type", "name", "range"
         "tech", "Democracy", "Player"
       }
graphic     = "gov.democracy"
graphic_alt = "-"

ruler_male_title = _("Prime Minister %s")
ruler_female_title = _("?female:Prime Minister %s")

helptext = _("\
Under Democracy, citizens govern directly by voting on issues.\
 Democracy offers the highest possible level of trade, but also\
 offers the most potential for unhappiness.  There is no corruption\
 during Democracy, but citizens become very upset during\
 wars.\
")

;------------------------------------------------------------------------
[government_fundamentalism]

name        = _("Fundamentalism")
reqs = { "type", "name", "range"
         "tech", "Fundamentalism", "Player"
       }
graphic     = "gov.fundamentalism"
graphic_alt = "-"

ruler_male_title = _("High Priest %s")
ruler_female_title = _("High Priestess %s")

helptext = _("\
Fundamentalism is organized around central beliefs, usually religious. These form\
 rigid guidelines for the actions of the rulers and the people.\
"), _("\
The people are entirely devoted to their beliefs, and are often willing to die to\
 preserve them.\
"), _("\
Improvements that convert unhappy citizens to content produce gold tithes equal to\
 the number of citizens they would convert. Fanatics cannot be bribed. Palace\
 gives +50% to gold income in its city. In each city, two military units may impose\
 martial law, making one citizen each content. Pilgrims can be used to migrate and\
 grow the population in the cities directed by the ruling High Priest.\
")

; /* <-- avoid gettext warnings
;
; Multipliers (aka policies)
;
; name                    = translatable name as seen by user
; rule_name               = (optional) internal name for savegames, rulesets
;                           etc; if not present, "name" is used for this
;                           purpose too. Since the name used in savegames must
;                           not change, if you want to rename an item after a
;                           ruleset has been released, you should set
;                           "rule_name" to the original value of "name".
; default                 = default value (as presented in UI)
; start                   = minimum value (as presented in UI)
; stop                    = maximum value (as presented in UI)
; step                    = minimum increase/decrease (as presented in UI)
; offset                  = offset/factor control how UI values are turned
; factor                  = into effect values for use in effects.ruleset.
;                           effect_value = (ui_value + offset) * (factor/100)
;                           Optional; by default offset=0, factor=100, so
;                           that UI values are used as-is.
; reqs                    = requirements for adjusting this policy (see README.effects)
; helptext                = optional help text string; should escape all raw
;                           newlines so that xgettext parsing works
;
; */ <-- avoid gettext warnings
